import numpy as np

import pandas as pd

data=pd.read_csv("gender_submission.csv")

print(data)

     PassengerId  Survived
0            892         0
1            893         1
2            894         0
3            895         0
4            896         1
..           ...       ...
413         1305         0
414         1306         1
415         1307         0
416         1308         0
417         1309         0

[418 rows x 2 columns]

print(data.head())

   PassengerId  Survived
0          892         0
1          893         1
2          894         0
3          895         0
4          896         1

print(data.tail())

     PassengerId  Survived
413         1305         0
414         1306         1
415         1307         0
416         1308         0
417         1309         0

print(data['PassengerId'].isnull())

0      False
1      False
2      False
3      False
4      False
       ...  
413    False
414    False
415    False
416    False
417    False
Name: PassengerId, Length: 418, dtype: bool

print(data['Survived'].isnull())

0      False
1      False
2      False
3      False
4      False
       ...  
413    False
414    False
415    False
416    False
417    False
Name: Survived, Length: 418, dtype: bool

print(data['PassengerId'].describe())

count     418.000000
mean     1100.500000
std       120.810458
min       892.000000
25%       996.250000
50%      1100.500000
75%      1204.750000
max      1309.000000
Name: PassengerId, dtype: float64

data

	PassengerId 	Survived
0 	892 	0
1 	893 	1
2 	894 	0
3 	895 	0
4 	896 	1
... 	... 	...
413 	1305 	0
414 	1306 	1
415 	1307 	0
416 	1308 	0
417 	1309 	0

418 rows × 2 columns

data.isnull()

	PassengerId 	Survived
0 	False 	False
1 	False 	False
2 	False 	False
3 	False 	False
4 	False 	False
... 	... 	...
413 	False 	False
414 	False 	False
415 	False 	False
416 	False 	False
417 	False 	False

418 rows × 2 columns

data.describe()

	PassengerId 	Survived
count 	418.000000 	418.000000
mean 	1100.500000 	0.363636
std 	120.810458 	0.481622
min 	892.000000 	0.000000
25% 	996.250000 	0.000000
50% 	1100.500000 	0.000000
75% 	1204.750000 	1.000000
max 	1309.000000 	1.000000

type(data)

pandas.core.frame.DataFrame

one_hot_encoding_data=pd.get_dummies(data)

print(one_hot_encoding_data)

     PassengerId  Survived
0            892         0
1            893         1
2            894         0
3            895         0
4            896         1
..           ...       ...
413         1305         0
414         1306         1
415         1307         0
416         1308         0
417         1309         0

[418 rows x 2 columns]

one_hot_encoding_data

	PassengerId 	Survived
0 	892 	0
1 	893 	1
2 	894 	0
3 	895 	0
4 	896 	1
... 	... 	...
413 	1305 	0
414 	1306 	1
415 	1307 	0
416 	1308 	0
417 	1309 	0

418 rows × 2 columns

type(data['PassengerId'])

pandas.core.series.Series

data.dropna()

	PassengerId 	Survived
0 	892 	0
1 	893 	1
2 	894 	0
3 	895 	0
4 	896 	1
... 	... 	...
413 	1305 	0
414 	1306 	1
415 	1307 	0
416 	1308 	0
417 	1309 	0

418 rows × 2 columns

data.shape

(418, 2)

data.dtypes

PassengerId    int64
Survived       int64
dtype: object

data['PassengerId']=data['PassengerId'].astype('float')

data

	PassengerId 	Survived
0 	892.0 	0
1 	893.0 	1
2 	894.0 	0
3 	895.0 	0
4 	896.0 	1
... 	... 	...
413 	1305.0 	0
414 	1306.0 	1
415 	1307.0 	0
416 	1308.0 	0
417 	1309.0 	0

418 rows × 2 columns

data['PassengerId']=data['PassengerId'].astype('int')

data

	PassengerId 	Survived
0 	892 	0
1 	893 	1
2 	894 	0
3 	895 	0
4 	896 	1
... 	... 	...
413 	1305 	0
414 	1306 	1
415 	1307 	0
416 	1308 	0
417 	1309 	0

418 rows × 2 columns

data['PassengerId'].unique()

array([ 892,  893,  894,  895,  896,  897,  898,  899,  900,  901,  902,
        903,  904,  905,  906,  907,  908,  909,  910,  911,  912,  913,
        914,  915,  916,  917,  918,  919,  920,  921,  922,  923,  924,
        925,  926,  927,  928,  929,  930,  931,  932,  933,  934,  935,
        936,  937,  938,  939,  940,  941,  942,  943,  944,  945,  946,
        947,  948,  949,  950,  951,  952,  953,  954,  955,  956,  957,
        958,  959,  960,  961,  962,  963,  964,  965,  966,  967,  968,
        969,  970,  971,  972,  973,  974,  975,  976,  977,  978,  979,
        980,  981,  982,  983,  984,  985,  986,  987,  988,  989,  990,
        991,  992,  993,  994,  995,  996,  997,  998,  999, 1000, 1001,
       1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
       1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
       1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
       1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
       1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
       1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067,
       1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
       1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089,
       1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
       1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,
       1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
       1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133,
       1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144,
       1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
       1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
       1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
       1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
       1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
       1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
       1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
       1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
       1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
       1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
       1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
       1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
       1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
       1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
       1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309])

data['Survived'].unique()

array([0, 1])

data['Survived'].value_counts()

0    266
1    152
Name: Survived, dtype: int64

data['PassengerId'].value_counts()

892     1
1205    1
1177    1
1176    1
1175    1
       ..
1028    1
1027    1
1026    1
1025    1
1309    1
Name: PassengerId, Length: 418, dtype: int64

import numpy as np

import pandas as pd

df=pd.read_csv("titanic.csv")

df

	PassengerId 	Survived 	Pclass 	Name 	Sex 	Age 	SibSp 	Parch 	Ticket 	Fare 	Cabin 	Embarked
0 	1 	0 	3 	Braund, Mr. Owen Harris 	male 	22.0 	1 	0 	A/5 21171 	7.2500 	NaN 	S
1 	2 	1 	1 	Cumings, Mrs. John Bradley (Florence Briggs Th... 	female 	38.0 	1 	0 	PC 17599 	71.2833 	C85 	C
2 	3 	1 	3 	Heikkinen, Miss. Laina 	female 	26.0 	0 	0 	STON/O2. 3101282 	7.9250 	NaN 	S
3 	4 	1 	1 	Futrelle, Mrs. Jacques Heath (Lily May Peel) 	female 	35.0 	1 	0 	113803 	53.1000 	C123 	S
4 	5 	0 	3 	Allen, Mr. William Henry 	male 	35.0 	0 	0 	373450 	8.0500 	NaN 	S
... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	...
886 	887 	0 	2 	Montvila, Rev. Juozas 	male 	27.0 	0 	0 	211536 	13.0000 	NaN 	S
887 	888 	1 	1 	Graham, Miss. Margaret Edith 	female 	19.0 	0 	0 	112053 	30.0000 	B42 	S
888 	889 	0 	3 	Johnston, Miss. Catherine Helen "Carrie" 	female 	NaN 	1 	2 	W./C. 6607 	23.4500 	NaN 	S
889 	890 	1 	1 	Behr, Mr. Karl Howell 	male 	26.0 	0 	0 	111369 	30.0000 	C148 	C
890 	891 	0 	3 	Dooley, Mr. Patrick 	male 	32.0 	0 	0 	370376 	7.7500 	NaN 	Q

891 rows × 12 columns

df['Name'].isnull()

0      False
1      False
2      False
3      False
4      False
       ...  
886    False
887    False
888    False
889    False
890    False
Name: Name, Length: 891, dtype: bool

df['Name'].describe()

count                         891
unique                        891
top       Braund, Mr. Owen Harris
freq                            1
Name: Name, dtype: object

one_hot_encoding_data=pd.get_dummies(df)

one_hot_encoding_data

	PassengerId 	Survived 	Pclass 	Age 	SibSp 	Parch 	Fare 	Name_Abbing, Mr. Anthony 	Name_Abbott, Mr. Rossmore Edward 	Name_Abbott, Mrs. Stanton (Rosa Hunt) 	... 	Cabin_F G73 	Cabin_F2 	Cabin_F33 	Cabin_F38 	Cabin_F4 	Cabin_G6 	Cabin_T 	Embarked_C 	Embarked_Q 	Embarked_S
0 	1 	0 	3 	22.0 	1 	0 	7.2500 	0 	0 	0 	... 	0 	0 	0 	0 	0 	0 	0 	0 	0 	1
1 	2 	1 	1 	38.0 	1 	0 	71.2833 	0 	0 	0 	... 	0 	0 	0 	0 	0 	0 	0 	1 	0 	0
2 	3 	1 	3 	26.0 	0 	0 	7.9250 	0 	0 	0 	... 	0 	0 	0 	0 	0 	0 	0 	0 	0 	1
3 	4 	1 	1 	35.0 	1 	0 	53.1000 	0 	0 	0 	... 	0 	0 	0 	0 	0 	0 	0 	0 	0 	1
4 	5 	0 	3 	35.0 	0 	0 	8.0500 	0 	0 	0 	... 	0 	0 	0 	0 	0 	0 	0 	0 	0 	1
... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	... 	...
886 	887 	0 	2 	27.0 	0 	0 	13.0000 	0 	0 	0 	... 	0 	0 	0 	0 	0 	0 	0 	0 	0 	1
887 	888 	1 	1 	19.0 	0 	0 	30.0000 	0 	0 	0 	... 	0 	0 	0 	0 	0 	0 	0 	0 	0 	1
888 	889 	0 	3 	NaN 	1 	2 	23.4500 	0 	0 	0 	... 	0 	0 	0 	0 	0 	0 	0 	0 	0 	1
889 	890 	1 	1 	26.0 	0 	0 	30.0000 	0 	0 	0 	... 	0 	0 	0 	0 	0 	0 	0 	1 	0 	0
890 	891 	0 	3 	32.0 	0 	0 	7.7500 	0 	0 	0 	... 	0 	0 	0 	0 	0 	0 	0 	0 	1 	0

891 rows × 1731 columns
